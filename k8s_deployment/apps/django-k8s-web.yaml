# Persistent Volume and Persistent Volume Claim are attached
# to the kubernetes cluster and must be created before deployment

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: oci-fss
provisioner: oracle.com/oci-fss
parameters:
  mntTargetId: ocid1.mounttarget.oc1.uk_london_1.aaaaacvippx2taaqnruhellqojxwiotvnmwwy33omrxw4ljrfvqwiljr

---
apiVersion: v1
kind: PersistentVolume
metadata:
 name: pv-fss-app
spec:
 storageClassName: oci-fss
 capacity:
  storage: 100Gi
 accessModes:
  - ReadWriteMany
 mountOptions:
  - nosuid
 nfs:
  server: 10.0.10.254            # Mount private ip
  path: "/FileSystemApp"         # File system export path
  readOnly: false

---
apiVersion: v1
kind: PersistentVolume
metadata:
 name: pv-fss-nginx
spec:
 storageClassName: oci-fss
 capacity:
  storage: 100Gi
 accessModes:
  - ReadWriteMany
 mountOptions:
  - nosuid
 nfs:
  server: 10.0.10.254              
  path: "/FileSystemNGINX"         
  readOnly: false

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: pvc-fss-app
spec:
 storageClassName: oci-fss
 accessModes:
 - ReadWriteMany
 resources:
  requests:
    storage: 100Gi
 volumeName: pv-fss-app

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: pvc-fss-nginx
spec:
 storageClassName: oci-fss
 accessModes:
 - ReadWriteMany
 resources:
  requests:
    storage: 100Gi
 volumeName: pv-fss-nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-k8s-web-deployment
  labels:
    app: django-k8s-web-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: django-k8s-web-deployment
  template:
    metadata:
      labels:
        app: django-k8s-web-deployment
    spec:
      containers:
      - name: django-k8s-web
        image: lhr.ocir.io/idhkis4m3p5e/k8s_test:latest
        imagePullPolicy: Always
        envFrom:
          - secretRef:
              name: django-k8s-web-prod-env
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: nfs-mount
          mountPath: "app/media/"
        resources:
          limits:
            cpu: 50m
          requests:
            cpu: 20m
        env:
          - name: PORT
            value: "8000"
      volumes:
      - name: nfs-mount
        persistentVolumeClaim:
          claimName: pvc-fss-app
          readOnly: false
      imagePullSecrets:
        - name: ocirsecret


---
apiVersion: v1
kind: Service
metadata:
  name: django-k8s-web-service
  labels:
    app: django-k8s-web-deployment
spec:
  ports:
  - name: http
    protocol: TCP
    port: 8000
    targetPort: 8000

  selector:
    app: django-k8s-web-deployment


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx-deployment
  replicas: 3 
  template:
    metadata:
      labels:
        app: nginx-deployment
    spec:
      containers:
      - name: nginx
        image: lhr.ocir.io/idhkis4m3p5e/k8s_t:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nfs-mount
          mountPath: "/home/app/microservice/static"
        resources:
          limits:
            cpu: 50m
          requests:
            cpu: 20m
      volumes:
      - name: nfs-mount
        persistentVolumeClaim:
          claimName: pvc-fss-nginx
          readOnly: false
      imagePullSecrets:
        - name: ocirsecret

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service-lbaas
  labels:
    app: nginx-deployment
  annotations:
    service.beta.kubernetes.io/oci-load-balancer-shape: "flexible"
    service.beta.kubernetes.io/oci-load-balancer-shape-flex-min: "10"
    service.beta.kubernetes.io/oci-load-balancer-shape-flex-max: "100"
spec:
  type: LoadBalancer
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80

  selector:
    app: nginx-deployment